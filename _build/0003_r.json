{
    "Outputs": {
        "ClioutputApigatewayCbcPodcastListings": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Ref": "CbcPodcastListings"
                        },
                        ".execute-api.",
                        {
                            "Ref": "AWS::Region"
                        },
                        ".amazonaws.com/",
                        {
                            "Ref": "Stage"
                        }
                    ]
                ]
            }
        },
        "ClioutputLambdaApiListingsListings": {
            "Value": {
                "Ref": "ListingsCurrentalias"
            }
        },
        "ClioutputLambdaSkillCbcPodcastsPlayer": {
            "Value": {
                "Ref": "PlayerCurrentalias"
            }
        }
    },
    "Parameters": {
        "CodeBucket": {
            "Description": "Bucket where the code is located.",
            "Type": "String"
        },
        "ListingsS3Version": {
            "Type": "String"
        },
        "PlayerS3Version": {
            "Type": "String"
        },
        "Region": {
            "Description": "AWS Region",
            "Type": "String"
        },
        "Stage": {
            "Default": "dev",
            "Description": "Name of the Stage",
            "Type": "String"
        },
        "VersionS3Version": {
            "Type": "String"
        }
    },
    "Resources": {
        "ApiListingsListings": {
            "DependsOn": [
                "ListingsRole"
            ],
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "CodeBucket"
                    },
                    "S3Key": "api-listings_listings.zip",
                    "S3ObjectVersion": {
                        "Ref": "ListingsS3Version"
                    }
                },
                "Description": "Parses CBC podcast RSS feeds and returns a much simpler JSON obj",
                "Handler": "code.handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "ListingsRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": 8
            },
            "Type": "AWS::Lambda::Function"
        },
        "CbcPodcastListings": {
            "Properties": {
                "Description": "CBC Podcast Listings API",
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            "cbc-podcast-listings",
                            {
                                "Ref": "Stage"
                            }
                        ]
                    ]
                }
            },
            "Type": "AWS::ApiGateway::RestApi"
        },
        "CbcPodcastListingsDeployment5Dffa520": {
            "DependsOn": [
                "CbcPodcastListingsTitleTitleAny"
            ],
            "Properties": {
                "RestApiId": {
                    "Ref": "CbcPodcastListings"
                },
                "StageName": {
                    "Ref": "Stage"
                }
            },
            "Type": "AWS::ApiGateway::Deployment"
        },
        "CbcPodcastListingsResourceTitle": {
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "CbcPodcastListings",
                        "RootResourceId"
                    ]
                },
                "PathPart": "title",
                "RestApiId": {
                    "Ref": "CbcPodcastListings"
                }
            },
            "Type": "AWS::ApiGateway::Resource"
        },
        "CbcPodcastListingsResourceTitleTitle": {
            "Properties": {
                "ParentId": {
                    "Ref": "CbcPodcastListingsResourceTitle"
                },
                "PathPart": "{title}",
                "RestApiId": {
                    "Ref": "CbcPodcastListings"
                }
            },
            "Type": "AWS::ApiGateway::Resource"
        },
        "CbcPodcastListingsRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "apigateway.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "CbcPodcastListingsRolePolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "CbcPodcastListingsTitleTitleAny": {
            "Properties": {
                "ApiKeyRequired": false,
                "AuthorizationType": "NONE",
                "HttpMethod": "ANY",
                "Integration": {
                    "Credentials": {
                        "Fn::GetAtt": [
                            "CbcPodcastListingsRole",
                            "Arn"
                        ]
                    },
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "SelectionPattern": "",
                            "StatusCode": "200"
                        }
                    ],
                    "RequestTemplates": {},
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Ref": "ListingsCurrentalias"
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200"
                    }
                ],
                "RequestParameters": {
                    "method.request.path.title": true
                },
                "ResourceId": {
                    "Ref": "CbcPodcastListingsResourceTitleTitle"
                },
                "RestApiId": {
                    "Ref": "CbcPodcastListings"
                }
            },
            "Type": "AWS::ApiGateway::Method"
        },
        "ContribLambdasVersion": {
            "DependsOn": [
                "VersionRole"
            ],
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "CodeBucket"
                    },
                    "S3Key": "contrib_lambdas_version.zip",
                    "S3ObjectVersion": {
                        "Ref": "VersionS3Version"
                    }
                },
                "Description": "Publishes new versions of Lambdas.",
                "Handler": "version.handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "VersionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": 300
            },
            "Type": "AWS::Lambda::Function"
        },
        "ListingsCurrentalias": {
            "DependsOn": [
                "ListingsVersion"
            ],
            "Properties": {
                "FunctionName": {
                    "Ref": "ApiListingsListings"
                },
                "FunctionVersion": {
                    "Fn::GetAtt": [
                        "ListingsVersion",
                        "Version"
                    ]
                },
                "Name": "current"
            },
            "Type": "AWS::Lambda::Alias"
        },
        "ListingsRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "ListingsLogsPolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "ListingsVersion": {
            "DependsOn": [
                "VersionCurrentalias",
                "ApiListingsListings"
            ],
            "Properties": {
                "FunctionName": {
                    "Ref": "ApiListingsListings"
                },
                "S3ObjectVersion": {
                    "Ref": "ListingsS3Version"
                },
                "ServiceToken": {
                    "Ref": "VersionCurrentalias"
                }
            },
            "Type": "Custom::LambdaVersion"
        },
        "PlayerCurrentalias": {
            "DependsOn": [
                "PlayerVersion"
            ],
            "Properties": {
                "FunctionName": {
                    "Ref": "SkillCbcPodcastsPlayer"
                },
                "FunctionVersion": {
                    "Fn::GetAtt": [
                        "PlayerVersion",
                        "Version"
                    ]
                },
                "Name": "current"
            },
            "Type": "AWS::Lambda::Alias"
        },
        "PlayerRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "PlayerLogsPolicy"
                    },
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "dynamodb:*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:aws:dynamodb:*:*:table/skill-cbc-podcasts"
                                },
                                {
                                    "Action": [
                                        "cloudwatch:DeleteAlarms",
                                        "cloudwatch:DescribeAlarmHistory",
                                        "cloudwatch:DescribeAlarms",
                                        "cloudwatch:DescribeAlarmsForMetric",
                                        "cloudwatch:GetMetricStatistics",
                                        "cloudwatch:ListMetrics",
                                        "cloudwatch:PutMetricAlarm",
                                        "datapipeline:ActivatePipeline",
                                        "datapipeline:CreatePipeline",
                                        "datapipeline:DeletePipeline",
                                        "datapipeline:DescribeObjects",
                                        "datapipeline:DescribePipelines",
                                        "datapipeline:GetPipelineDefinition",
                                        "datapipeline:ListPipelines",
                                        "datapipeline:PutPipelineDefinition",
                                        "datapipeline:QueryObjects",
                                        "iam:ListRoles",
                                        "sns:CreateTopic",
                                        "sns:DeleteTopic",
                                        "sns:ListSubscriptions",
                                        "sns:ListSubscriptionsByTopic",
                                        "sns:ListTopics",
                                        "sns:Subscribe",
                                        "sns:Unsubscribe",
                                        "sns:SetTopicAttributes",
                                        "lambda:CreateFunction",
                                        "lambda:ListFunctions",
                                        "lambda:ListEventSourceMappings",
                                        "lambda:CreateEventSourceMapping",
                                        "lambda:DeleteEventSourceMapping",
                                        "lambda:GetFunctionConfiguration",
                                        "lambda:DeleteFunction"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Action": [
                                        "logs:*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "PlayerFullDynamodbPlusLogsPolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "PlayerVersion": {
            "DependsOn": [
                "VersionCurrentalias",
                "SkillCbcPodcastsPlayer"
            ],
            "Properties": {
                "FunctionName": {
                    "Ref": "SkillCbcPodcastsPlayer"
                },
                "S3ObjectVersion": {
                    "Ref": "PlayerS3Version"
                },
                "ServiceToken": {
                    "Ref": "VersionCurrentalias"
                }
            },
            "Type": "Custom::LambdaVersion"
        },
        "SkillCbcPodcastsPlayer": {
            "DependsOn": [
                "PlayerRole"
            ],
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "CodeBucket"
                    },
                    "S3Key": "skill-cbc-podcasts_player.zip",
                    "S3ObjectVersion": {
                        "Ref": "PlayerS3Version"
                    }
                },
                "Description": "Teaches Alexa how to play CBC podcasts",
                "Handler": "index.handler",
                "MemorySize": 128,
                "Role": {
                    "Fn::GetAtt": [
                        "PlayerRole",
                        "Arn"
                    ]
                },
                "Runtime": "nodejs4.3",
                "Timeout": 8
            },
            "Type": "AWS::Lambda::Function"
        },
        "VersionCurrentalias": {
            "DependsOn": [
                "VersionVersion"
            ],
            "Properties": {
                "FunctionName": {
                    "Ref": "ContribLambdasVersion"
                },
                "FunctionVersion": {
                    "Fn::GetAtt": [
                        "VersionVersion",
                        "Version"
                    ]
                },
                "Name": "current"
            },
            "Type": "AWS::Lambda::Alias"
        },
        "VersionRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "*"
                                    ]
                                },
                                {
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "VersionLogsPolicy"
                    },
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "lambda:PublishVersion",
                                        "lambda:GetFunction"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:aws:lambda:*:*:*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "VersionManageVersionPolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "VersionVersion": {
            "DependsOn": [
                "ContribLambdasVersion",
                "ContribLambdasVersion"
            ],
            "Properties": {
                "FunctionName": {
                    "Ref": "ContribLambdasVersion"
                },
                "S3ObjectVersion": {
                    "Ref": "VersionS3Version"
                },
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "ContribLambdasVersion",
                        "Arn"
                    ]
                }
            },
            "Type": "Custom::LambdaVersion"
        }
    }
}